p text = <<-TT
Завдання 1. 
Є масив [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 
	494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 
	458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336] , 
зберегти масив в змінну і виконати з нею наступне 
(повинен виводитись результат, але сам масив не змінювати):
TT

arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 
	494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 
	458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]

p '– дізнатись кількість елементів в масиві;'
p 'arr.length'
p arr.length
p '*' * 50

p '– перевернути масив;'
p 'arr.reverse'
p arr.reverse
p '*' * 50

p '– знайти найбільше число;'
p 'arr.max'
p arr.max 
p '*' * 50

p '- знайти найменше число;'
p 'arr.max'
p arr.min 
p '*' * 50

p '– відсортувати від меншого до більшого;'
p 'arr.sort'
p arr.sort
p '*' * 50

p '– відсортувати від більшого до меншого;'
p 'arr.sort.reverse'
p arr.sort.reverse
p '*' * 50

p '– видалити всі непарні числа;'
p 'arr.select(&:even?)'
p arr.select(&:even?)
p '*' * 50

p '– залишити тільки ті числа, які без остачі ділятся на 3;'
p 'arr.sort.select {|i| (i%3).zero? }'
p arr.sort.select {|i| (i%3).zero? }
p '*' * 50

p '– видалити з масиву числа, які повторюються (тобто, потрібно вивести масив, в якому немає повторень);'
p 'arr.sort&arr.sort'
p arr.sort&arr.sort
p '*' * 50

p '– розділити кожен елемент на 10, в результаті елементи не мають бути округленими до цілого;'
p 'arr2 = arr'
p 'arr2.map {|i| i.to_f/10 }'
arr2 = arr
p arr2.map {|i| i.to_f/10 }
p '*' * 50

p '– отримати новий масив, який би містив в собі ті літери англійського алфавіту, порядковий номер яких є в нашому масиві;'
p 'arr1 = arr.select { |element| element.between?(1, 26) }'
p 'arr2 = (\'a\'..\'z\').to_a'
p 'arr1.map { |i| arr2[i - 1] }'
arr1 = arr.select { |element| element.between?(1, 26) }
arr2 = ('a'..'z').to_a
p arr1.map { |i| arr2[i - 1] }
p '*' * 50

p '– змінити місцями мінімальний і максимальний елементи масиву;'
p <<-text
arr0 = arr
c=arr0.index(arr0.max)
b=arr0.index(arr0.min)
a=arr0.max
arr0[c]=arr0[b]
arr0[b]=a
text
arr0 = arr
c=arr0.index(arr0.max)
b=arr0.index(arr0.min)
a=arr0.max
arr0[c]=arr0[b]
arr0[b]=a
p arr0
p '*' * 50

p '– знайти елементи, які знаходяться перед мінімальним числом в масиві;'
p 'arr[0...arr.index(arr.min)]'
p arr
p arr[0...arr.index(arr.min)]
p '*' * 50

p '– необхідно знайти три найменших елементи'
p 'arr.min(3)'
p arr.sort
p arr.min(3)
p '*' * 50
